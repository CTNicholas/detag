{
  "version": 3,
  "sources": ["../src/index.ts"],
  "sourcesContent": ["type DetagArgs = [string] | [string[], ...any]\r\n\r\nfunction detag (\r\n  args: DetagArgs = undefined,\r\n  defaultValue: any = undefined,\r\n  raw: boolean = false\r\n): string | null {\r\n\r\n  // String passed, assume mistake and return regular string\r\n  if (isString(args)) {\r\n    return `${args}`\r\n  }\r\n\r\n  // Error, no array passed\r\n  if (!isArray(args)) {\r\n    return null\r\n  }\r\n\r\n  // Empty array passed, return default value\r\n  if (args.length < 1) {\r\n    return defaultValue\r\n  }\r\n\r\n  // If first array element is string, normal function call, return string\r\n  if (isString(args[0])) {\r\n    return `${args[0]}`\r\n  }\r\n\r\n  // Error first array element is not array or string\r\n  if (!isArray(args[0])) {\r\n    return null\r\n  }\r\n\r\n  // Tagged template literal used\r\n  const [literals, ...subs] = args\r\n  let result = ''\r\n\r\n  // Loop through tagged template literal args and return string\r\n  for (let i = 0; i < literals.length; i++) {\r\n    result += `${literals[i]}${subs[i] || ''}`\r\n  }\r\n\r\n  return result\r\n}\r\n\r\n// Helper functions\r\nfunction isArray (arg) {\r\n  return Array.isArray(arg)\r\n}\r\n\r\nfunction isString (arg) {\r\n  return typeof arg === 'string' || arg instanceof String\r\n}\r\n\r\n// Converted to ESM by bundler\r\nmodule.exports = detag\r\n"],
  "mappings": "AAEA,WACE,EAAkB,OAClB,EAAoB,OACpB,EAAe,GACA,CAGf,GAAI,EAAS,GACX,MAAO,GAAG,IAIZ,GAAI,CAAC,EAAQ,GACX,MAAO,MAIT,GAAI,EAAK,OAAS,EAChB,MAAO,GAIT,GAAI,EAAS,EAAK,IAChB,MAAO,GAAG,EAAK,KAIjB,GAAI,CAAC,EAAQ,EAAK,IAChB,MAAO,MAIT,GAAM,CAAC,KAAa,GAAQ,EACxB,EAAS,GAGb,OAAS,GAAI,EAAG,EAAI,EAAS,OAAQ,IACnC,GAAU,GAAG,EAAS,KAAK,EAAK,IAAM,KAGxC,MAAO,GAIT,WAAkB,EAAK,CACrB,MAAO,OAAM,QAAQ,GAGvB,WAAmB,EAAK,CACtB,MAAO,OAAO,IAAQ,UAAY,YAAe,QAInD,OAAO,QAAU",
  "names": []
}
